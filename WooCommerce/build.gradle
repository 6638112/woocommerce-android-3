apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        applicationId "com.woocommerce.android"
        versionName "1.0"
        versionCode 1

        minSdkVersion 17
        targetSdkVersion 26

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"

    compile "com.android.support:appcompat-v7:$supportLibraryVersion"

    compile('com.github.wordpress-mobile.WordPress-FluxC-Android:fluxc:5629317341197ba6a79f58a4c40c263992d728b9') {
        exclude group: "com.android.support";
    }

    // Dagger
    compile "com.google.dagger:dagger:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"
    provided 'org.glassfish:javax.annotation:10.0-b28'
    compile "com.google.dagger:dagger-android-support:$daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"

    // Debug dependencies
    debugCompile 'com.facebook.stetho:stetho:1.5.0'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.5.0'

    // Dependencies for local unit tests
    testCompile "junit:junit:4.12"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:1.5.0"

    // Dependencies for Espresso UI tests
    androidTestCompile "com.android.support.test:runner:$testRunnerVersion"
    androidTestCompile "com.android.support.test:rules:$testRunnerVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"

    // Resolve conflicts between main and test APK
    androidTestCompile "com.android.support:support-annotations:$supportLibraryVersion"
    androidTestCompile "com.google.code.findbugs:jsr305:3.0.1"
}

// Add properties named "wp.xxx" to our BuildConfig
android.buildTypes.all { buildType ->
    def inputFile = checkGradlePropertiesFile()
    def properties = loadPropertiesFromFile(inputFile)
    properties.any { property ->
        if (property.key.toLowerCase().startsWith("wp.")) {
            buildType.buildConfigField "String", property.key.replace("wp.", "").replace(".", "_").toUpperCase(),
                    "\"${property.value}\""
        }
        if (property.key.toLowerCase().startsWith("wp.res.")) {
            buildType.resValue "string", property.key.replace("wp.res.", "").replace(".", "_").toLowerCase(),
                    "${property.value}"
        }
    }
}

def checkGradlePropertiesFile() {
    def inputFile = file("${rootDir}/gradle.properties")
    if (!inputFile.exists()) {
        throw new StopActionException("Build configuration file gradle.properties doesn't exist, follow README instructions")
    }
    return inputFile
}

static def loadPropertiesFromFile(inputFile) {
    def properties = new Properties()
    inputFile.withInputStream { stream ->
        properties.load(stream)
    }
    return properties
}
